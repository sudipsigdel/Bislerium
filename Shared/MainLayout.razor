@inherits LayoutComponentBase
@layout ParentLayout
@inject IDialogService DialogService

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        @if (_globalState.CurrentUser != null)
        {
            <h4> @_globalState.CurrentUser.Role</h4>
        }
        <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit"  OnClick="@((e) => ShowModel())" />
    </MudAppBar>

    <MudDrawer @bind-Open="@_drawerOpen">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Bislerium</MudText>
        </MudDrawerHeader>
        
        <MudNavMenu>
            <MudNavLink Href="/" Match="NavLinkMatch.All">Home</MudNavLink>
            <MudNavLink Href="/coffee" Match="NavLinkMatch.Prefix">Coffee</MudNavLink>
            <MudNavLink Href="/addins" Match="NavLinkMatch.Prefix">Addins</MudNavLink>
            @*
            @if (_globalState.CurrentUser.Role.ToString() == "Admin")
            {
            <MudNavLink Href="/edit" Match="NavLinkMatch.Prefix">Edit</MudNavLink>
            }
            *@
            <MudNavLink Href="/cart" Match="NavLinkMatch.Prefix">Cart</MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    [CascadingParameter]
    private GlobalState _globalState { get; set; }

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void ShowModel() {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<LogoutLayout>("Log Out?", options);
    }
}